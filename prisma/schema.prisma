// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Contact {
  id         String   @id @default(uuid())
  value      String   @unique
  personId   String   @unique
  person     Person   @relation(fields: [personId], references: [id])
  businessId String   @unique
  business   Business @relation(fields: [businessId], references: [id])
  branchId   String   @unique
  branch     Branch   @relation(fields: [branchId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Email {
  id         String   @id @default(uuid())
  value      String   @unique
  personId   String   @unique
  person     Person   @relation(fields: [personId], references: [id])
  businessId String   @unique
  business   Business @relation(fields: [businessId], references: [id])
  branchId   String   @unique
  branch     Branch   @relation(fields: [branchId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Nationality {
  id       String @id @default(uuid())
  value    String @unique
  personId String @unique
  person   Person @relation(fields: [personId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Person {
  id          String       @id @default(uuid())
  name        String
  contact     Contact?
  email       Email?
  nationality Nationality?
  user        User         @relation(fields: [userId], references: [id])
  userId      String       @unique
  businesses  Business[]

  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  Operation Operation[]
}

model User {
  id        String     @id @default(uuid())
  username  String
  person    Person?
  token     String
  password  String
  employees Employee[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Business {
  id       String   @id @default(uuid())
  name     String
  contact  Contact?
  email    Email?
  person   Person?  @relation(fields: [founder], references: [id])
  founder  String?
  branches Branch[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Branch {
  id         String      @id @default(uuid())
  vontact    Contact?
  email      Email?
  business   Business?   @relation(fields: [businessId], references: [id])
  businessId String?
  employees  Employee[]
  Inventory  Inventory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Permission {
  id         String    @id @default(uuid())
  name       String    @unique
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?
}

model Employee {
  id          String       @id @default(uuid())
  Branch      Branch?      @relation(fields: [branchId], references: [id])
  branchId    String?
  User        User?        @relation(fields: [userId], references: [id])
  userId      String?
  role        String
  status      String
  permissions Permission[]
  operations  Operation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Product {
  id        String      @id @default(uuid())
  name      String
  detail    String
  colour    String
  variant   String
  Inventory Inventory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Inventory {
  id                String  @id @default(uuid())
  product           Product @relation(fields: [productId], references: [id])
  branch            Branch  @relation(fields: [branchId], references: [id])
  serialNumber      String
  unitBuyPrice      Decimal
  unitSellPrice     Decimal
  unitDescountPrice Decimal
  quantity          Decimal
  productId         String
  branchId          String

  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  Operation Operation[]
}

model OperationalAction {
  id         String      @id @default(uuid())
  name       String
  operations Operation[]
}

model Operation {
  id                  String             @id @default(uuid())
  quantity            Int
  price               Decimal
  employeeId          String?
  inventoryId         String
  personId            String
  operationalActionId String?
  inventory           Inventory          @relation(fields: [inventoryId], references: [id])
  person              Person             @relation(fields: [personId], references: [id])
  Employee            Employee?          @relation(fields: [employeeId], references: [id])
  OperationalAction   OperationalAction? @relation(fields: [operationalActionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
